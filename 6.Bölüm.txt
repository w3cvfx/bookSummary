  __
 / /_
| '_ \
| (_) |
 \___/
[Altıncı Bölüm]
- print() program dosyamızda ekrana çıktı vermemizi sağlar.
* dosyalarda çıktı vermek için kullanılmalı
* birden fazla parametre alabilir. ve aralarına " " koyar.
* sep="" parametrelerin arasına bir değer yerleştirir.
| sadece string veya None -öntanımlı-.
* isimli parametre(name=""): parametreden farkı her zaman ismiyle birlikte kullanılmasıdır.
* end="" parametrelerin sonuna neyin geleceğini belirler.[None=\n]
* bir satırda mümkün oldugunca 79 karakteri geçmemesini sağlamalıyız. sağa doğru çirkin olmasını engllemek için virgülden sonra alt satra devam edebiliriz.
>>> print("bir", "iki",
... sep="/", end=".")
* file="" dosyaya çıktı yazdırmak
>>> dosya = open("deneme.txt", "w")
>>> print("Ben Python, Monty Python!", file=dosya)
>>> dosya.close()
| öntanımlı: sys.stdout
| dosya kapatmadan hiç bir şey yazdırmaz çünkü tamponda bekler.

* flush="" boşaltmak durumu
| True: (tamponda beklemeden)dosya kapatmadan yazar.
| [öntanımlı]False: (tamponda bekler) yazmak için dosya kapatmak gerekir.

* print(*"Linux", sep=".")
| öğeyi parçalarına ayırarak (array gibi) print()'e yollar.
| ancak birden fazla parametre alabilen fonksiyonlara uygulayabiliriz.
| sayılarla kullanılmaz.




- open(src, "w") dosya oluşturmak
>>> open("test.txt", "w")

- sys.stdout
* Çıtkı dosyaya yazdırmak
>>> f = open("profile", "w");
>>> import sys; sys.stdout=f
>>> "Ali, Muhammed"
>>> f.close()
| kapatmadan yazdırıyor.
| öntanımlıya dönmek: sys.stdout=sys.__stdout__
* sys.stdout.name
* sys.stdout.mode (w:yazmak)
* sys.stdout.encoding (UTF-8)
* eski haline döndürmek:
>>> import sys
>>> f = open("dosya.txt", "w")
>>> sys.stdout, f = f, sys.stdout 
>>> print("deneme", flush=True) 
>>> f, sys.stdout = sys.stdout, f 
>>> print("deneme")





- hangi dizideyim?
>>> import os
>>> os.getcwd()


- \n newline



- etkileşim kabuk bir test ortamı olması açısından rahattır.

- " " ve "" farklıdır.

- Üç farklı tırnak secenek var:
* Tek tırnak
* Çift tırnak
* Üç tırnak
| birden fazla satıra karakter dizilere kullanılır.

- modüller
* bir modül kullanmadan onu aktarmak gerekir.
* import x içine aktarmak
* x.var_or_function kullanmak için
* bir modülü aynı etkileşimli kabuk oturumu içinde bir kez aktarmak yeterli. ama kaparak yeniden açıp o modül kullanmak için yeniden aktarmak gerekir.

